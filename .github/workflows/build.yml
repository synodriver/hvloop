name: Build and upload to PyPI

on:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build whells on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2
        with:
            submodules: true
      - uses: actions/setup-python@v2
        with:
            python-version: "3.8"
      - name: Install dependencies
        run: |
          pip install -U pip wheel
          pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp3?-*
          CIBW_SKIP: "*-win32 *-manylinux_i686 cp35-*"
          CIBW_BEFORE_BUILD: "pip install -U cython cmake"

      - name: Show files
        run: ls -lh wheelhouse
        shell: bash

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-18.04
    # upload to PyPI on every tag starting with 'v'
#    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
